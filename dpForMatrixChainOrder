source = [30,35,15,5,10,20,25]
#source = [5,10,3,12,5,50,6]
n = len(source)
matrix = [[100000 for x in range(n)] for y in range(n)]
s = [[100000 for x in range(n)] for y in range(n)]
def matrix_chain_order_topDown(source,n):
	for i in range(n):
		matrix[i][i] = 0
	for l in range(2,n): #chain length
		for i in range(1,n-l+1): #start point
			j = i + l -1
			for k in range(i,j): #cut point
				q = matrix[i][k] + matrix[k+1][j] + source[i-1]*source[k]*source[j]
				if q < matrix[i][j]:
					matrix[i][j] = q
					s[i][j] = k
	for i in range(n):
		print s[i]

	def printParathesis(head,rear):
		cutPoint = s[head][rear]
		if rear==head: print 'A' + str(rear)
		else: 
			print '('
			printParathesis(head,cutPoint)
			printParathesis(cutPoint+1,rear)
			print ')'
	printParathesis(1,n-1)


matrix_chain_order_topDown(source,n)




